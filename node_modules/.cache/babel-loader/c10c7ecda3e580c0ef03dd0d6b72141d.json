{"ast":null,"code":"var _jsxFileName = \"/Users/jin/my_project/react_projects/helloworld/src/components/Header/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleKeyUp = e => {\n      const {\n        keyCode,\n        target\n      } = e;\n      if (keyCode !== 13) return;\n\n      if (target.value.trim() === '') {\n        alert('input should not be empty');\n        return;\n      }\n\n      const todoObj = {\n        id: nanoid(),\n        name: target.value,\n        done: false\n      };\n      this.props.addTodo(todoObj);\n      target.value = '';\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: this.handleKeyUp,\n        type: \"text\",\n        placeholder: \"input your task name, press enter to confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nHeader.propTypes = {};","map":{"version":3,"sources":["/Users/jin/my_project/react_projects/helloworld/src/components/Header/index.jsx"],"names":["React","Component","PropTypes","nanoid","Header","handleKeyUp","e","keyCode","target","value","trim","alert","todoObj","id","name","done","props","addTodo","render","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,aAAP;;AACA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAI1CI,WAJ0C,GAI3BC,CAAD,IAAO;AACjB,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAsBF,CAA5B;AACA,UAAIC,OAAO,KAAK,EAAhB,EAAoB;;AACpB,UAAIC,MAAM,CAACC,KAAP,CAAaC,IAAb,OAAwB,EAA5B,EAAgC;AAC5BC,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACA;AACH;;AACD,YAAMC,OAAO,GAAG;AAAEC,QAAAA,EAAE,EAAEV,MAAM,EAAZ;AAAgBW,QAAAA,IAAI,EAAEN,MAAM,CAACC,KAA7B;AAAoCM,QAAAA,IAAI,EAAE;AAA1C,OAAhB;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBL,OAAnB;AACAJ,MAAAA,MAAM,CAACC,KAAP,GAAe,EAAf;AACH,KAdyC;AAAA;;AAgB1CS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAO,QAAA,OAAO,EAAE,KAAKb,WAArB;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtByC;AAAzBD,M,CACVe,S,GAAY,E","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { nanoid } from 'nanoid'\nimport './index.css'\nexport default class Header extends Component {\n    static propTypes = {\n        \n    }\n    handleKeyUp = (e) => {\n        const { keyCode, target } = e\n        if (keyCode !== 13) return\n        if (target.value.trim() === '') {\n            alert('input should not be empty')\n            return\n        }\n        const todoObj = { id: nanoid(), name: target.value, done: false }\n        this.props.addTodo(todoObj)\n        target.value = ''\n    }\n\n    render() {\n        return (\n            <div className=\"todo-header\">\n                <input onKeyUp={this.handleKeyUp} type=\"text\" placeholder=\"input your task name, press enter to confirm\" />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}